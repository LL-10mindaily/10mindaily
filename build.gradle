plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.ll'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security' // 권한체크, 로그인 폼 처리
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' // 카카오 로그인, 구글 로그인, 네이버 로그인
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    runtimeOnly 'com.h2database:h2'

    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect' // 타임리프에서 layout.html 사용하려고

<<<<<<< HEAD
    // Querydsl 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //jsoup 추가
    implementation 'org.jsoup:jsoup:1.14.1'

    //금융 정보 api를 받아오기 위해 추가 + Json데이터 파싱
    implementation 'org.apache.httpcomponents:httpclient'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.json:json:20210307'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
    implementation 'org.commonmark:commonmark:0.21.0'

    // Querydsl 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // Querydsl 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //jsoup 추가
    implementation 'org.jsoup:jsoup:1.14.1'

    //금융 정보 api를 받아오기 위해 추가 + Json데이터 파싱
    implementation 'org.apache.httpcomponents:httpclient'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.json:json:20210307'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
=======
	implementation 'org.commonmark:commonmark:0.21.0'

	// Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
>>>>>>> 3630690 (Nagiltae (#9))

	//jsoup 추가
	implementation 'org.jsoup:jsoup:1.14.1'

}

tasks.named('test') {
    useJUnitPlatform()
}
